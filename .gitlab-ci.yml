image: node:10-alpine

stages:
#  - build
#  - lint
#  - test
  - build-docker
  - deploy


#cache:
#  key: ${CI_COMMIT_REF_SLUG}
#  paths:
#    - node_modules/

#build:
#  stage: build
#  except:
#    - deployment
#  variables:
#    NODE_ENV: test
#  script:
#    - rm -rf node_modules/
#    - npm install
#  artifacts:
#    paths:
#      - node_modules/
#
#test:
#  stage: test
#  except:
#    - deployment
#  script:
#    - npm test
#
#lint:
#  stage: lint
#  except:
#    - deployment
#  script:
#    - npm run lint

build-docker:
  image: docker:18
  services:
    - docker:dind
  stage: build-docker
  only:
    - deployment
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --cache-from $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA


deploy-beta:
  image: docker:18
  services:
    - docker:dind
  stage: deploy
  environment:
    name: beta
    url: https://beta.bananup.co
  only:
    - deployment
  before_script:
    - apk add --no-cache openssh-client bash make
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $CI_REGISTRY
  variables:
    DEPLOY_SERVERS: $BETA_SERVERS
    DOCKER_FILE: docker-compose-beta.yml
    PROJECT_DIR: $PROJECT_DIR_BETA
    PROD: 0
    ENV_FILE: .env.beta
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:beta
    - docker push $CI_REGISTRY_IMAGE:beta
    - bash deploy.sh


deploy-prod:
  image: docker:18
  services:
    - docker:dind
  stage: deploy
  environment:
    name: production
    url: https://bananup.co
  only:
    - deployment
  when: manual
  before_script:
    - apk add --no-cache openssh-client bash make
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $CI_REGISTRY
  variables:
    DEPLOY_SERVERS: $PROD_SERVERS
    DOCKER_FILE: docker-compose-prod.yml
    PROJECT_DIR: $PROJECT_DIR_PROD
    PROD: 1
    ENV_FILE: .env.production
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - bash deploy.sh

